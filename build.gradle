plugins {
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'application'
    id 'com.adarshr.test-logger' version '1.6.0'
    id "org.springframework.boot" version "2.1.2.RELEASE"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.otus.hw_07'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    gsonVersion = '2.8.5'
    spockVersion = '1.2-groovy-2.5'
    groovyVersion = '2.5.6'
    springShellVersion = '2.0.1.RELEASE'
    junitJupiterVersion = '5.3.2'
    junitVintageVersion = '5.3.2'
    javaAssistVersion = '3.18.2-GA'
    mongockVersion = '2.0.0'
}

dependencies {
    implementation(
        "com.google.code.gson:gson:${gsonVersion}",
        'org.springframework.boot:spring-boot-starter-data-mongodb',
        "org.springframework.shell:spring-shell-starter:${springShellVersion}",
        "org.javassist:javassist:${javaAssistVersion}",
        "com.github.cloudyrock.mongock:mongock-core:${mongockVersion}",
        "com.github.cloudyrock.mongock:mongock-spring:${mongockVersion}",
        "com.github.cloudyrock.mongock:mongock-jongo:${mongockVersion}"
    )
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    testCompileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')
    testImplementation(
        'de.flapdoodle.embed:de.flapdoodle.embed.mongo',
        'org.springframework.boot:spring-boot-starter-test',
        "org.spockframework:spock-core:${spockVersion}",
        "org.spockframework:spock-spring:${spockVersion}",
        "org.codehaus.groovy:groovy-all:${groovyVersion}",
        "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    )
    testRuntimeOnly(
        "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}",
        "org.junit.vintage:junit-vintage-engine:${junitVintageVersion}"
    )
}

wrapper {
    gradleVersion = '5.2.1'
}

testlogger {
    theme 'mocha-parallel'
}

test {
    useJUnitPlatform()
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}

clean.doFirst {
    delete "out"
}
